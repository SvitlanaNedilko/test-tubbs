{"version":3,"sources":["App.tsx","index.tsx"],"names":["buttons","App","useState","leftShadow","setLeftShadow","rightntShadow","setRightntShadow","headerRef","useRef","handleClick","event","currentButton","currentTarget","scrollIntoView","behavior","document","querySelectorAll","forEach","button","classList","remove","add","handleScroll","current","scrollLeft","Math","round","scrollRight","scrollWidth","body","clientWidth","useEffect","className","result","getHeaderStyles","ref","onScroll","map","index","onClick","disabled","ReactDOM","render","StrictMode","getElementById"],"mappings":"4MAGMA,EAAU,CACd,YACA,cACA,mBACA,uBACA,mBACA,mBACA,qBACA,iBACA,mBACA,mBACA,oBA6EaC,MA1Ef,WAAgB,IAAD,EACuBC,oBAAkB,GADzC,mBACNC,EADM,KACMC,EADN,OAE6BF,oBAAkB,GAF/C,mBAENG,EAFM,KAESC,EAFT,KAIPC,EAAYC,iBAAwB,MAa1C,SAASC,EAAYC,GACnB,IAAMC,EAAgBD,EAAME,cAC5BD,EAAcE,eAAe,CAAEC,SAAU,WAEzCC,SAASC,iBAAiB,UAAUC,SAAQ,SAACC,GAC3CA,EAAOC,UAAUC,OAAO,aAG1BT,EAAcQ,UAAUE,IAAI,UAG9B,SAASC,IACP,GAAIf,EAAUgB,QAAS,CACrB,IAAMC,EAAaC,KAAKC,MAAMnB,EAAUgB,QAAQC,YAG1CG,EAFepB,EAAUgB,QAAQK,YACnBb,SAASc,KAAKC,YAGlC,GAAmB,IAAfN,EACF,OAAOpB,GAAc,GAEvB,GAAIoB,IAAeG,EACjB,OAAOrB,GAAiB,GAG1BF,GAAc,GACdE,GAAiB,IAQrB,OAJAyB,qBAAU,WACRT,MACC,IAGD,qBAAKU,UAAU,MAAf,SACE,wBACEA,UAhDN,WACE,IAAMC,EAAS,SACf,OAAmB,IAAf9B,EACK8B,kBAEa,IAAlB5B,EACK4B,kBAEFA,EAwCQC,GACXC,IAAK5B,EACL6B,SAAUd,EAHZ,SAKE,8BACE,oBAAIU,UAAU,WAAd,SACGhC,EAAQqC,KAAI,SAACnB,EAAQoB,GAAT,OACX,oBAAIN,UAAU,WAAd,SACE,wBAAQO,QAAS9B,EAAa+B,SAAoB,IAAVF,EAAxC,SACGpB,KAFyBoB,eCzE5CG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,U","file":"static/js/main.937e80b2.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport './App.scss'\n\nconst buttons = [\n  'Job Focus',\n  'Soft Skills',\n  'Technical Skills',\n  'Functional Expertise',\n  'Domain Expertise',\n  'Patent Expertice',\n  'Personal Expertise',\n  'Hard Expertise',\n  'Domain Expertise',\n  'Domain Expertise',\n  'Domain Expertise',\n]\n\nfunction App() {\n  const [leftShadow, setLeftShadow] = useState<boolean>(false)\n  const [rightntShadow, setRightntShadow] = useState<boolean>(true)\n\n  const headerRef = useRef<HTMLHtmlElement>(null)\n\n  function getHeaderStyles() {\n    const result = 'scroll'\n    if (leftShadow === false) {\n      return result + ' no-left'\n    }\n    if (rightntShadow === false) {\n      return result + ' no-right'\n    }\n    return result\n  }\n\n  function handleClick(event: React.MouseEvent<HTMLButtonElement>) {\n    const currentButton = event.currentTarget\n    currentButton.scrollIntoView({ behavior: 'smooth' })\n    \n    document.querySelectorAll('button').forEach((button) => {\n      button.classList.remove('active')\n    })\n\n    currentButton.classList.add('active')\n  }\n\n  function handleScroll() {\n    if (headerRef.current) {\n      const scrollLeft = Math.round(headerRef.current.scrollLeft)\n      const scrollWhidth = headerRef.current.scrollWidth\n      const clientWidth = document.body.clientWidth\n      const scrollRight = scrollWhidth - clientWidth\n\n      if (scrollLeft === 0) {\n        return setLeftShadow(false)\n      }\n      if (scrollLeft === scrollRight) {\n        return setRightntShadow(false)\n      }\n\n      setLeftShadow(true)\n      setRightntShadow(true)\n    }\n  }\n\n  useEffect(() => {\n    handleScroll()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header\n        className={getHeaderStyles()}\n        ref={headerRef}\n        onScroll={handleScroll}\n      >\n        <nav>\n          <ul className=\"nav-list\">\n            {buttons.map((button, index) => (\n              <li className=\"nav-item\" key={index}>\n                <button onClick={handleClick} disabled={index === 1}>\n                  {button}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}